#!/bin/bash

# Try to get the path of an icon in the current gnome theme
# Icon themes can extend from other, so it try to look for the icon recursively

usage() {
	echo "Usage: $(basename $0) icon_path"
	echo "    icon_path: path of the icon inside a theme (eg: scalable/devices/input-touchpad-symbolic.svg)"
}

# Try to get the path of an icon recursively (icon themes can extend from others)
#   $1: icon theme name
#   $2: path of the icon inside a theme (eg: scalable/devices/input-touchpad-symbolic.svg)
get_icon() {
	local theme="$1"
	local icon_name="$2"
	local path=$(get_theme_path $theme)

	if [ -f "$path/$icon_name" ]; then
		echo "$path/$icon_name"
	else
		local parent_themes=$(get_parent_themes "$path")
		if [ -n "$parent_themes" ]; then
			echo "$parent_themes" | while read parent_theme; do
				local icon=$(get_icon "$parent_theme" "$icon_name")
				if [ -n "$icon" ]; then
					echo "$icon"
					return
				fi
			done
		fi
	fi
}

# Get the parent icon themes if any (one per line)
#  $1: icon theme path
get_parent_themes() {
	local path="$1"
	if [ -f "$path/index.theme" ]; then
		grep "Inherits" "$path/index.theme" | sed -n 's/Inherits=\(.*\)/\1/p' | tr ',' '\n'
	fi
}

# Get the root path of an icon theme given its name
#   $1: icon theme name
get_theme_path() {
	local theme="$1"
	if [ -d "$HOME/.icons/$theme" ]; then
		echo "$HOME/.icons/$theme"
	elif [ -d "/usr/share/icons/$theme" ]; then
		echo "/usr/share/icons/$theme"
	else
		# Icon theme path does not exist
		exit 1
	fi
}


# Get the arg
if [ $# -ne 1 ]; then
	usage
	exit 1
fi
icon_name="$1"

# Try to get the path of the icon in the current icon theme
theme=$(gsettings get org.gnome.desktop.interface icon-theme | tr -d "'")
icon=$(get_icon "$theme" "$icon_name")

# Print the icon path if found
if [ -z "$icon" ]; then
	# Icon not found
	exit 1
else
	echo "$icon"
fi

